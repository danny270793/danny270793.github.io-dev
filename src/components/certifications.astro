---
import MyCertifications, {
  Certification as MyCertification,
  CategoryOrder,
} from "../libraries/me/knowledges/certifications";
import CertificationsBackground from "../images/parallax/certification.jpg";
import CertificationLarge from "./certification-large.astro";
import CertificationSmall from "./certification-small.astro";

const { parallaxHeight = "25vh" } = Astro.props;
---

<div
  id="certifications"
  class="parallax w3-display-container"
  style={`background-image: url("${CertificationsBackground.src}"); min-height: ${parallaxHeight}`}
>
  <div class="w3-display-middle no-spaces">
    <span
      class="w3-center w3-padding w3-black w3-xlarge w3-wide w3-animate-opacity"
    >
      Certifications
    </span>
  </div>
</div>
<div class="w3-content w3-container w3-padding-64">
  <div class="w3-center">
    <div
      class="category-filter w3-bar-item w3-round w3-button w3-green"
      data-category="All"
    >
      <span class="w3-badge w3-red">
        {MyCertifications.length}
      </span> All
    </div>
    {
      [
        ...new Set(
          MyCertifications.map(
            (certification: MyCertification) => certification.category,
          ).sort((a, b) => CategoryOrder[a] - CategoryOrder[b]),
        ),
      ].map((category) => (
        <div
          class="category-filter w3-bar-item w3-round w3-button"
          data-category={`${category.replace(" ", "_")}`}
        >
          <span class="w3-badge w3-red">
            {MyCertifications.filter((e) => e.category === category).length}
          </span>{" "}
          {category}
        </div>
      ))
    }
  </div>
  <br />

  {
    [
      ...new Set(
        MyCertifications.map(
          (certification: MyCertification) => certification.category,
        ).sort((a, b) => CategoryOrder[a] - CategoryOrder[b]),
      ),
    ].map((category) =>
      MyCertifications.filter((e) => e.category === category)
        .sort((a, b) => a.order - b.order)
        .chunk(3)
        .map((certifications: MyCertification[]) => (
          <div
            class={`categories category-${category.replace(" ", "_")} w3-hide`}
          >
            {certifications.map((certification: MyCertification) => (
              <CertificationSmall certification={certification} />
            ))}

            <div class="w3-row w3-hide-small">
              {certifications.map((certification: MyCertification) => (
                <CertificationLarge certification={certification} />
              ))}
            </div>
          </div>
        )),
    )
  }

  <div id="all">
    {
      MyCertifications.sort(
        (a, b) =>
          (CategoryOrder[a.category] + 1) * 10 +
          a.order -
          (CategoryOrder[b.category] + 1) * 10 +
          b.order,
      )
        .chunk(3)
        .map((certifications: MyCertification[]) => (
          <div>
            {certifications.map((certification: MyCertification) => (
              <CertificationSmall certification={certification} />
            ))}

            <div class="w3-row w3-hide-small">
              {certifications.map((certification: MyCertification) => (
                <CertificationLarge certification={certification} />
              ))}
            </div>
          </div>
        ))
    }
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const all: HTMLElement | null = document.getElementById("all");

    const filter = function (key: string, element: Element): void {
      document
        .querySelectorAll(".category-filter")
        .forEach((categoryFilter: Element) => {
          categoryFilter.classList.remove("w3-green");
        });
      element.classList.add("w3-green");

      if (key === "All") {
        all?.classList.remove("w3-hide");
        document
          .querySelectorAll(".categories")
          .forEach((categoryDiv: Element) => {
            categoryDiv.classList.add("w3-hide");
          });
      } else {
        all?.classList.add("w3-hide");
        document
          .querySelectorAll(".categories")
          .forEach((categoryDiv: Element) => {
            categoryDiv.classList.add("w3-hide");
          });
        document
          .querySelectorAll(`.category-${key}`)
          .forEach((categoryDiv: Element) => {
            categoryDiv.classList.remove("w3-hide");
          });
      }
    };
    document
      .querySelectorAll<HTMLElement>(".category-filter")
      .forEach((categoryFilter: HTMLElement) => {
        categoryFilter.addEventListener("click", () =>
          filter(categoryFilter.dataset.category || "", categoryFilter),
        );
      });
  });
</script>
